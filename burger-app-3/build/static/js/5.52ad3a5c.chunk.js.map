{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTrasnfrom","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","components_Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,gJC+BHA,EA7BD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIhC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAClBC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAETC,IAAKV,EAAGJ,MAPH,IAOWI,EAAGJ,KAPd,KAOsBI,EAAGH,OAPzB,QAUT,OACEI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQrB,OACtBU,EAAAC,EAAAC,cAAA,wBAAgBL,GAChBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,cAASU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,uCCnB1DC,8LAGFC,KAAK1B,MAAM2B,cAAcD,KAAK1B,MAAM4B,MAAOF,KAAK1B,MAAM6B,yCAItD,IAAIC,EAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MASb,OARKL,KAAK1B,MAAMgC,UACdF,EAAUJ,KAAK1B,MAAM8B,OAAOvB,IAAI,SAAA0B,GAAK,OACnCxB,EAAAC,EAAAC,cAACuB,EAAD,CACEhB,IAAKe,EAAME,GACXlC,YAAagC,EAAMhC,YACnBsB,MAAOU,EAAMV,WAIjBd,EAAAC,EAAAC,cAAA,WACGmB,UAlBYM,aAsCNC,sBAdS,SAAAC,GACtB,MAAM,CACJR,OAAQQ,EAAML,MAAMH,OACpBE,QAASM,EAAML,MAAMD,QACrBJ,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,SAGI,SAAAW,GACzB,MAAO,CACLb,cAAe,SAACC,EAAMC,GAAP,OAAiBW,EAASC,IAAoBb,EAAMC,OAIxDQ,CAA6CK,YAAiBjB,EAAQkB","file":"static/js/5.52ad3a5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1c_gv\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push(\r\n      {\r\n        name: ingredientName,\r\n        amount: props.ingredients[ingredientName]\r\n      });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return <span style={{\r\n      textTrasnfrom: 'capitalize',\r\n      display: 'inline-block',\r\n      margin: '0 8px',\r\n      border: '1px solid #ccc',\r\n      padding: '5px'\r\n    }}\r\n      key={ig.name}> {ig.name} ({ig.amount}) </span>\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients:{ingredientOutput}</p>\r\n      <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n  render() {\r\n    let orders = <Spinner/>\r\n    if (!this.props.loading){\r\n      orders =  this.props.orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price} />\r\n      ))\r\n    }\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    onFetchOrders: (token,userId)=> dispatch(actions.fetchOrders(token,userId))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}