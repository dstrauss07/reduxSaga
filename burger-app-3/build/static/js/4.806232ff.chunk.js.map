{"version":3,"sources":["components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js"],"names":["module","exports","Input","Label","InputElement","Invalid","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","updateObject","_this","Object","C_Users_Dave_Desktop_2020Coding_React_burgerreactapp2_burger_app_3_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","swithAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_7__","invalid","shouldValidate","changed","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","errorMessage","error","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_13__","to","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_8__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","action","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","inputElement","inputClasses","assign","join","onChange","options","option","displayValue","label"],"mappings":"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","file":"static/js/4.806232ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3UR_C\",\"Label\":\"Input_Label__2YOpj\",\"InputElement\":\"Input_InputElement__F49rm\",\"Invalid\":\"Input_Invalid__3dlh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__10Kya\"};","import React, {Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as action from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {updateObject, checkValidity} from '../../shared/utility';\r\n\r\n\r\nclass Auth extends Component{\r\n  state ={\r\n    controls:{\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Email Address'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          placeholder: 'Password'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true,\r\n          minLength:6\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      }\r\n    },\r\n    isSignUp: true\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n      this.props.onSetAuthRedirectPath()\r\n    }\r\n  }\r\n  \r\n  \r\ninputChangedHandler= (event, controlName) =>{\r\n  const updatedControls = updateObject(this.state.controls,{\r\n    [controlName]: updateObject(this.state.controls[controlName],{\r\n      value: event.target.value,\r\n      valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n      touched: true\r\n    })\r\n  });\r\n  this.setState({controls: updatedControls});\r\n}\r\n\r\nsubmitHandler = (event) =>{\r\n  event.preventDefault();\r\n  this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n}\r\n\r\n\r\nswithAuthModeHandler  =() =>{\r\n  this.setState(prevState=>{\r\n      return {isSignUp: !prevState.isSignUp }\r\n  });\r\n}\r\n\r\n  render(){\r\n    const formElementArray = [];\r\n    for (let key in this.state.controls){\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n    let form = formElementArray.map(formElement=>(\r\n      <Input \r\n      key={formElement.id}\r\n      elementType={formElement.config.elementType}\r\n      elementConfig={formElement.config.elementConfig}\r\n      value={formElement.config.value}\r\n      invalid = {!formElement.config.valid}\r\n      shouldValidate = {formElement.config.validation}\r\n      touched={formElement.config.touched}\r\n      changed={(event)=>this.inputChangedHandler(event,formElement.id)}/> \r\n    ));\r\n\r\n    if(this.props.loading){\r\n      form =<Spinner />\r\n    }\r\n\r\n    let errorMessage = null;\r\n\r\n    if(this.props.error){\r\n      errorMessage =(\r\n        <p>{this.props.error.message}</p>\r\n      )\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated){\r\n      authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n    }\r\n\r\n    return(\r\n\r\n      <div className={classes.Auth}>\r\n        {authRedirect}\r\n       {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n         {form}\r\n        <Button btnType=\"Success\">Submit</Button>\r\n        </form>\r\n    <Button \r\n    clicked={this.swithAuthModeHandler}\r\n    btnType=\"Danger\">Switch To {this.state.isSignUp ? 'SignIn' : 'SignUp'}\r\n    </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger : state.burgerBuilder.building,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    onAuth: (email,password,isSignUp) => dispatch(action.auth(email,password,isSignUp)),\r\n    onSetAuthRedirectPath: () => dispatch(action.setAuthRedirect('/'))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched){\r\n    inputClasses.push(classes.Invalid)\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case ('input'):\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('textarea'):\r\n      inputElement = <textarea\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />\r\n      break;\r\n    case ('select'):\r\n      inputElement =\r\n        (\r\n          <select\r\n            className={inputClasses.join(' ')}\r\n            value={props.value}\r\n            onChange={props.changed}>\r\n            {props.elementConfig.options.map(option => (\r\n              <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n      break;\r\n    default:\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n  }\r\n\r\n  return (\r\n    <div className={inputClasses}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Input;"],"sourceRoot":""}