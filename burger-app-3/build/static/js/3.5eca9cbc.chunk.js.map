{"version":3,"sources":["components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js"],"names":["module","exports","Input","Label","InputElement","Invalid","CheckoutSummary","ContactData","props","react_default","a","createElement","className","Classes","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","onInitIngredients","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","Object","defineProperty","setState","_this2","this","formElementArray","key","push","id","config","form","onSubmit","map","formElement","invalid","shouldValidate","changed","disabled","loading","Spinner","classes","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","path","match","url","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","inputElement","inputClasses","assign","join","onChange","option","label"],"mappings":"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","file":"static/js/3.5eca9cbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3UR_C\",\"Label\":\"Input_Label__2YOpj\",\"InputElement\":\"Input_InputElement__F49rm\",\"Invalid\":\"Input_Invalid__3dlh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1bTJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__-lUUy\"};","import React from 'react';\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button';\r\nimport Classes from './CheckoutSummary.module.css'\r\n\r\nconst CheckoutSummary = (props) =>{\r\nreturn(\r\n  <div className={Classes.CheckoutSummary}>\r\n    <h1>We hope it tastes good!</h1>\r\n    <div style={{width: '100%', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients}/>\r\n    </div>\r\n    <Button \r\n    btnType=\"Danger\"\r\n    clicked={props.checkoutCancelled}>Cancel</Button>\r\n    <Button \r\n    btnType=\"Success\"\r\n    clicked={props.checkoutContinued}>Continue</Button>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default CheckoutSummary;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-order';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport {connect } from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\n\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'ZipCode'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength:5\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Email'\r\n        },\r\n        value: '',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' },\r\n          ]\r\n        },\r\n        validation:{},\r\n        value: 'fastest',\r\n        valid:true\r\n      }\r\n    },\r\n    formIsValid: false\r\n  }\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData ={};\r\n    for (let formElementIdentifier in this.state.orderForm){\r\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    }\r\n    this.props.onOrderBurger(order, this.props.token);\r\n    this.props.onInitIngredients();\r\n  }\r\n  \r\n  inputChangedHandler= (event, inputIdentifier) =>{\r\n    const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier],{\r\n        value: event.target.value,\r\n        valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n        touched: true\r\n    }); \r\n    const updatedOrderForm = updateObject(this.state.orderForm,{\r\n        [inputIdentifier]:updatedFormElement\r\n    });\r\n    let formIsValid =true;\r\n    for(let inputIdentifier in updatedOrderForm){\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\r\n  }\r\n\r\n  render() {\r\n    const formElementArray = [];\r\n    for (let key in this.state.orderForm){\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementArray.map(formElement => (\r\n          <Input \r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid = {!formElement.config.valid}\r\n          shouldValidate = {formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={(event)=>this.inputChangedHandler(event,formElement.id)}\r\n         /> \r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        {form}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n  ings: state.burgerBuilder.ingredients,\r\n  price: state.burgerBuilder.totalPrice,\r\n  loading: state.order.loading,\r\n  token: state.auth.token,\r\n  userId : state.auth.userId\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients())\r\n  };\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component{\r\n\r\n  checkoutCancelledHandler = () =>{\r\n    this.props.history.goBack();\r\n  }\r\n  checkoutContinuedHandler = () =>{\r\n    this.props.history.replace('/checkout/contact-data');\r\n  }\r\nrender(){\r\n  let summary = <Redirect to=\"/\"/>\r\n\r\n  if (this.props.ings){\r\n    const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n    summary = (\r\n      <div>\r\n      {purchasedRedirect}\r\n      <CheckoutSummary \r\n      ingredients={this.props.ings}\r\n      checkoutCancelled={this.checkoutCancelledHandler}\r\n      checkoutContinued={this.checkoutContinuedHandler}/>\r\n      <Route path={this.props.match.url + '/contact-data'}  \r\n      component={ContactData}/>\r\n      </div>\r\n    );\r\n  };\r\n  return summary;\r\n};\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched){\r\n    inputClasses.push(classes.Invalid)\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case ('input'):\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('textarea'):\r\n      inputElement = <textarea\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />\r\n      break;\r\n    case ('select'):\r\n      inputElement =\r\n        (\r\n          <select\r\n            className={inputClasses.join(' ')}\r\n            value={props.value}\r\n            onChange={props.changed}>\r\n            {props.elementConfig.options.map(option => (\r\n              <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n      break;\r\n    default:\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n  }\r\n\r\n  return (\r\n    <div className={inputClasses}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Input;"],"sourceRoot":""}